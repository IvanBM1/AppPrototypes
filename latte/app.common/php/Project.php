<?php

/**
 * Stub generated by xlatte
 */
class Project extends projectBase
{
    /**
     * @remote
     * @param object $options
     * @param string $orderBy
     * @return Project[]
     */
    public static function search($options, $orderBy = ""){

        $query = "SELECT #COLUMNS FROM project";

        $options = self::isAuthorized($options);
        $query = self::addOptions($query, $options);
        $query = self::addOrderBy($query, $orderBy);

        return DL::arrayOf('Project', $query);
    }

    /**
     * @remote
     * @param number $idcategory
     * @return Project
     */
    public static function byIdCategory($idcategory)
    {
        return DL::oneOf('Project', "
			SELECT #COLUMNS
			FROM project
				JOIN category USING(idproject)
			WHERE idcategory = '$idcategory'
		");
    }

    /**
	 * @remote
	 * @param number $idimage
	 * @return Project
	 */
	public static function getIdProject($idimage)
	{
		return DL::oneOf('Project', "
			SELECT project.*
			FROM project
				JOIN category 	USING (idproject)
				JOIN image		USING (idcategory)
			WHERE image.idimage = '$idimage'
		");
	}

	/**
	 * @override
	 * @return boolean
	 */
	public function onInserting()
	{
		$this->created = DL::dateTime();
		return true;
	}


    static function addOptions($query, $options){
        $size = 0;
        if($options != null) $size = count($options);
        if($size > 0) {
            $query .= " WHERE "; $i = 0;
            foreach ($options as $key => $value) {
                $query .= "$key = '$value'";$i++;
                if ($i < $size) $query .= " AND ";
            }
        }

        return $query;
    }

    static function addOrderBy($query, $orderBy){
        if($orderBy != "")
            $query .= " ORDER BY ". $orderBy;
        return $query;
    }

    static function isAuthorized($options){


        if(!isset($_SESSION['iduser'])){
            $options['archived'] = 'false';
            $options['trash'] = 'false';
        }
        return $options;
    }
}